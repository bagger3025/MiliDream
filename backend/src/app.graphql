type Class {
  key: Int!
  name: String!
}

type Category {
  key: Int!
  name: String!
}

type User {
  key: Int!
  classKey: Int!
  userId: String!
  userPassword: String!
  userName: String!

  class: Class!
}

type Post {
  key: Int!
  userKey: Int!
  categoryKey: Int!
  title: String!
  body: String!
  time: String!
  viewCount: Int!

  postUser: User!
  comments: [Comment]
  category: Category!
}

type Comment {
  key: Int!
  userKey: Int
  postKey: Int!
  time: String!
  body: String!
  parentKey: Int

  childComment: [Comment]
  commentUser: User
}

input BoardInfo {
  title: String!
  body: String!
  userKey: Int!
  categoryKey: Int!
}

input UserInfo {
  userId: String!
  userPassword: String!
  userName: String!
  userClassKey: Int!
}

input CommentInfo {
  body: String!
  userKey: Int!
  postKey: Int!
  parentCommentKey: Int!
}

type Query {
  user(key: Int!): User
  allPosts: [Post]
  post(key: Int!): Post
}

type Mutation {
  postBoard(boardInfo: BoardInfo!): Boolean!
  postComment(commentInfo: CommentInfo!): Boolean!
  postUser(userInfo: UserInfo): User

  deleteBoard(key: Int!): Boolean!
  deleteComment(key: Int!): Boolean!
  deleteUser(key: Int!): Boolean!
}
